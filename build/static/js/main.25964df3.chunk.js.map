{"version":3,"sources":["components/Buttons.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Buttons","color","text","onClick","className","style","backgroundColor","defaultProps","Header","title","showAdd","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","AddTask","onAdd","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","App","showAddTask","setShowAddTask","setTasks","Math","floor","random","newTask","length","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.25964df3.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\n\nconst Buttons = ({color, text, onClick}) => {\n    \n\n    return (\n        <button\n        className=\"btn\"\n        onClick = {onClick} \n        style={{backgroundColor: color}}>\n            {text}\n        </button> \n    )\n}\n\nButtons.defaultProps = {\n    color: 'steelblue'\n}\n\nButtons.propTypes = {\n    text: PropTypes.string,\n    color: PropTypes.string,\n    onClick: PropTypes.func\n}\nexport default Buttons\n","import PropTypes from 'prop-types'\nimport Buttons from './Buttons'\n\nconst Header = ({title, onClick,showAdd}) => {\n \n    return (\n        <header\n        className=\"header\">\n        <h1>{title}</h1> \n        <Buttons onClick = {onClick}\n                 color={!showAdd ? \"green\" : \"red\"} \n                 text={!showAdd ? \"Add\" : \"Close\"}/>\n        </header>\n    )\n}\n\nHeader.defaultProps = {\n    title : 'Task Tracker',\n}\n\nHeader.propTypes = {\n    title : PropTypes.string,\n}\nexport default Header\n","import {FaTimes} from 'react-icons/fa'\nimport React from 'react'\n\nconst Task = ({task, onDelete, onToggle}) => {\n    return (\n        <div className={`task ${task.reminder ? \"reminder\":\"\"}`}\n         onDoubleClick = {() => onToggle(task.id)}>\n            <h3>\n                {task.text}\n                <FaTimes style = {{color : 'red', cursor : 'pointer'}}\n                onClick = {()=> onDelete(task.id)}/>\n            </h3>\n            <p>{task.day}</p>            \n        </div>\n    )\n}\n\nexport default Task","import Task from './Task'\n\nconst Tasks = ({tasks, onDelete, onToggle}) => {\n    return (\n        <>\n        {tasks.map((task) => (\n        <Task key = {tasks.id} task={task}\n         onDelete = {onDelete}\n         onToggle = {onToggle}/>\n         )\n         )}           \n        </>\n    )\n}\n\nexport default Tasks\n","import {useState} from 'react'\n\nconst AddTask = ({onAdd}) => {\n    const [text, setText] = useState('')\n    const [day, setDay] = useState('')\n    const [reminder, setReminder] = useState(false)\n\n    const onSubmit = (e) => {\n        e.preventDefault ()\n\n        if(!text){\n            alert(\"Please add a task\")\n            return\n        }\n\n        onAdd({text, day, reminder})\n\n        setText('')\n        setDay('')\n        setReminder(false)\n    }\n\n    return (\n        <form className='add-form' onSubmit = {onSubmit}>\n            <div className='form-control'>\n                <label>Task</label>\n                <input type='text' placeholder=' Add Task'\n                value = {text}\n                onChange = {(e) => setText(e.target.value)}/>\n            </div>\n\n            <div className='form-control'>\n                <label>Day and Time</label>\n                <input type='text' placeholder=' Add day and time'\n                 value = {day}\n                 onChange = {(e) => setDay(e.target.value)}/>\n            </div>\n\n            <div className='form-control form-control-check'>\n                <label>Reminder</label>\n                <input \n                 type='checkbox'\n                 checked = {reminder}\n                 value = {reminder}\n                 onChange = {(e) => setReminder(e.currentTarget.checked)}/>\n            </div>\n\n            <input type='submit' value='Save Task' \n            className = 'btn btn-Block'/>\n\n        </form>\n\n    )\n}\n\nexport default AddTask\n","import {useState} from 'react'\nimport Header from './components/Header';\nimport Tasks from './components/Tasks';\nimport AddTask from './components/AddTask';\n\n\nconst App = () => {\n  const [showAddTask, setShowAddTask] = useState(false)\n  const [tasks, setTasks] = useState([\n    {\n      id: 1,\n      text : 'Doctors appointment',\n      day : 'Feb 5th at 2:30pm',\n      reminder : true,\n      },\n  \n      {\n          id: 2,\n          text : 'Meeting at school',\n          day : 'Feb 6th at 1:30pm',\n          reminder : true,\n      },\n      {\n          id: 3,\n          text : 'Food shopping',\n          day : 'Feb 5th at 2:30pm',\n          reminder : false,\n      }\n      ])\n\n  //Display the add form\n  const onClick = ()=>{\n    !showAddTask ?  setShowAddTask(true) : setShowAddTask(false)\n\n  }\n\n  // Add items\n  const addTask = (task) => {\n    const id = Math.floor(Math.random() * 10000) + 1\n    const newTask = {id, ...task}\n    setTasks([...tasks, newTask])\n  }\n  // delete enteries on the ui\n  const deleteTask = (id)=>{\n    setTasks(tasks.filter((task)=> task.id !==id))\n  }\n\n  // Set the reminder to true or false\n  const toggleReminder = (id) =>{\n    setTasks(\n    tasks.map((task) => \n    task.id === id ? {...task, reminder:!task.reminder} \n    : task)\n    )\n  }\n  \n\n  return (\n    <div className=\"container\">\n      <Header onClick = {onClick} showAdd = {showAddTask}/>\n      {showAddTask && <AddTask onAdd = {addTask}/>}\n      {tasks.length > 0 ? (\n      <Tasks tasks={tasks}\n             onDelete = {deleteTask}\n             onToggle = {toggleReminder}/>)\n       : ('No tasks to show')\n      }\n    </div>\n  );\n}\n\nexport default App\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}